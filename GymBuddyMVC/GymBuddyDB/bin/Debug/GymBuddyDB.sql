/*
Deployment script for GymBuddyDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GymBuddyDB"
:setvar DefaultFilePrefix "GymBuddyDB"
:setvar DefaultDataPath "C:\Users\5mate\AppData\Local\Microsoft\VisualStudio\SSDT\GymBuddyMVC"
:setvar DefaultLogPath "C:\Users\5mate\AppData\Local\Microsoft\VisualStudio\SSDT\GymBuddyMVC"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[Categories]...';


GO
CREATE TABLE [dbo].[Categories] (
    [ID]        INT           NOT NULL,
    [Title]     NVARCHAR (30) NULL,
    [WorkOutID] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC),
    UNIQUE NONCLUSTERED ([WorkOutID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Customers]...';


GO
CREATE TABLE [dbo].[Customers] (
    [UserID]     INT            NOT NULL,
    [First Name] NVARCHAR (70)  NULL,
    [Last Name]  NVARCHAR (70)  NULL,
    [Age]        INT            NULL,
    [Height]     DECIMAL (3, 2) NULL,
    [Weight]     DECIMAL (5, 2) NULL,
    [ProgramID]  INT            NOT NULL,
    [MAXLifts]   INT            NULL,
    PRIMARY KEY CLUSTERED ([UserID] ASC),
    UNIQUE NONCLUSTERED ([ProgramID] ASC)
);


GO
PRINT N'Creating Table [dbo].[MAXLifts]...';


GO
CREATE TABLE [dbo].[MAXLifts] (
    [MAXLiftsID]  INT            NOT NULL,
    [MaxBench]    DECIMAL (5, 2) NULL,
    [MaxSquat]    DECIMAL (5, 2) NULL,
    [MaxDeadLift] DECIMAL (5, 2) NULL,
    [WorkoutID]   INT            NULL,
    PRIMARY KEY CLUSTERED ([MAXLiftsID] ASC)
);


GO
PRINT N'Creating Table [dbo].[WorkOutProgram]...';


GO
CREATE TABLE [dbo].[WorkOutProgram] (
    [ProgramID]   INT           NOT NULL,
    [Title]       NVARCHAR (80) NULL,
    [Description] NVARCHAR (90) NULL,
    [CategoryID]  INT           NULL,
    [Days]        DATE          NULL,
    PRIMARY KEY CLUSTERED ([ProgramID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Workouts]...';


GO
CREATE TABLE [dbo].[Workouts] (
    [ID]        INT            NOT NULL,
    [WorkoutID] INT            NULL,
    [Name]      NVARCHAR (30)  NULL,
    [Reps]      INT            NULL,
    [Weight]    DECIMAL (5, 2) NULL,
    [Sets]      INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Customers]...';


GO
ALTER TABLE [dbo].[Customers] WITH NOCHECK
    ADD FOREIGN KEY ([MAXLifts]) REFERENCES [dbo].[MAXLifts] ([MAXLiftsID]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[MAXLifts]...';


GO
ALTER TABLE [dbo].[MAXLifts] WITH NOCHECK
    ADD FOREIGN KEY ([WorkoutID]) REFERENCES [dbo].[Workouts] ([ID]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[WorkOutProgram]...';


GO
ALTER TABLE [dbo].[WorkOutProgram] WITH NOCHECK
    ADD FOREIGN KEY ([CategoryID]) REFERENCES [dbo].[Categories] ([ID]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Workouts]...';


GO
ALTER TABLE [dbo].[Workouts] WITH NOCHECK
    ADD FOREIGN KEY ([WorkoutID]) REFERENCES [dbo].[Categories] ([WorkOutID]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Customers'), OBJECT_ID(N'dbo.MAXLifts'), OBJECT_ID(N'dbo.WorkOutProgram'), OBJECT_ID(N'dbo.Workouts'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
