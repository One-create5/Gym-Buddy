// <auto-generated />
using System;
using GymBuddy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymBuddy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210422204622_CreateAllTables2")]
    partial class CreateAllTables2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GymBuddy.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserWorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutExerciseId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("UserWorkoutId")
                        .IsUnique();

                    b.HasIndex("WorkoutExerciseId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GymBuddy.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutExerciseId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.HasIndex("WorkoutExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GymBuddy.Models.MaxLift", b =>
                {
                    b.Property<int>("MaxLiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("MaxBench")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MaxDeadLift")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MaxSquat")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("WorkoutExerciseId")
                        .HasColumnType("int");

                    b.HasKey("MaxLiftId");

                    b.HasIndex("WorkoutExerciseId");

                    b.ToTable("MaxLifts");
                });

            modelBuilder.Entity("GymBuddy.Models.UserWorkout", b =>
                {
                    b.Property<int>("UserWorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("WorkoutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserWorkoutId");

                    b.ToTable("UserWorkouts");
                });

            modelBuilder.Entity("GymBuddy.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("WorkoutExerciseId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("GymBuddy.Models.Category", b =>
                {
                    b.HasOne("GymBuddy.Models.UserWorkout", "UserWorkout")
                        .WithOne("Category")
                        .HasForeignKey("GymBuddy.Models.Category", "UserWorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymBuddy.Models.WorkoutExercise", "WorkoutExercise")
                        .WithMany("Categories")
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserWorkout");

                    b.Navigation("WorkoutExercise");
                });

            modelBuilder.Entity("GymBuddy.Models.Exercise", b =>
                {
                    b.HasOne("GymBuddy.Models.WorkoutExercise", "WorkoutExercise")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutExercise");
                });

            modelBuilder.Entity("GymBuddy.Models.MaxLift", b =>
                {
                    b.HasOne("GymBuddy.Models.WorkoutExercise", "WorkoutExercise")
                        .WithMany("MaxLifts")
                        .HasForeignKey("WorkoutExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutExercise");
                });

            modelBuilder.Entity("GymBuddy.Models.UserWorkout", b =>
                {
                    b.Navigation("Category");
                });

            modelBuilder.Entity("GymBuddy.Models.WorkoutExercise", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Exercises");

                    b.Navigation("MaxLifts");
                });
#pragma warning restore 612, 618
        }
    }
}
